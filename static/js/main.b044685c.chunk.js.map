{"version":3,"sources":["services.ts","customer.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["services","fetch","then","res","json","data","console","log","catch","error","customerId","CustomerComponent","props","state","Data","isLoggedIn","showData","className","title","Customer","name","options","paging","pageSize","columns","field","editable","onRowAdd","newData","Promise","resolve","reject","setTimeout","onRowUpdate","oldData","onRowDelete","handleClick","bind","e","preventDefault","this","getCustomerCalls","id","response","dataSet","forEach","element","push","status","description","application","setState","prevState","onClick","React","App","Customers","a","getAllCustomers","map","item","index","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b044685c.chunk.js","sourcesContent":["import fetchJsonp from \"fetch-jsonp\";\r\nimport { Customer, Status, Call, Stats, Application } from \"./objects\";\r\n\r\nexport class services {\r\n  public async getAllCustomers(): Promise<any> {\r\n    let data;\r\n    let test;\r\n\r\n    //\r\n\r\n    return await fetch(\r\n      \"http://localhost:8010/proxy/api/Customer\"\r\n      // \"https://techtestcalllogapi.azurewebsites.net/api/Customer\"\r\n      //,  { mode: \"cors\" }\r\n      //   headers: {\r\n      //     \"Access-Control-Allow-Origin\": '*',\r\n      //    \"Content-Type\": \"application/json\"\r\n      //    }\r\n      // }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(\"ðŸš€ ~ data\", data);\r\n\r\n        return data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  public async getCustomer(customerId?: string): Promise<any> {\r\n    await fetch(\r\n      \"https://techtestcalllogapi.azurewebsites.net/api/Customer/\" + customerId\r\n      //   { mode: \"no-cors\" }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(\"ðŸš€ ~ data\", data);\r\n        return data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    return;\r\n  }\r\n\r\n  public async getCustomerCalls(customerId?: string): Promise<any> {\r\n    let data;\r\n    let test;\r\n    //\r\n    return await fetch(\r\n      \"http://localhost:8010/proxy/api/Call/customer/\" + customerId\r\n      // \"https://techtestcalllogapi.azurewebsites.net/api/Customer\"\r\n      //,  { mode: \"cors\" }\r\n      //   headers: {\r\n      //     \"Access-Control-Allow-Origin\": '*',\r\n      //    \"Content-Type\": \"application/json\"\r\n      //    }\r\n      // }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(\"ðŸš€ ~ data\", data);\r\n\r\n        return data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n}\r\n","import MaterialTable from \"material-table\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\n\r\nimport * as React from \"react\";\r\nimport styles from \"./Component.module.scss\";\r\nimport { Customer, Status, Call, Stats, Application } from \"./objects\";\r\nimport { services } from \"./services\";\r\n\r\nexport interface ICustomerProps {\r\n  Customer: Customer;\r\n}\r\n\r\nexport interface ICustomerState {\r\n  Customer?: Customer;\r\n  showData: boolean;\r\n  data?: any;\r\n}\r\n\r\nexport default class CustomerComponent extends React.Component<\r\n  ICustomerProps,\r\n  ICustomerState\r\n> {\r\n  private services: services = new services();\r\n\r\n  constructor(props: ICustomerProps, state: ICustomerState) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showData: false,\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n\r\n    console.log(\"ðŸš€ ~  this.state\", this.state);\r\n  }\r\n\r\n  public async handleClick(e: any) {\r\n    e.preventDefault();\r\n    console.log(\"The link was clicked.\");\r\n\r\n    await this.services\r\n      .getCustomerCalls(this.props.Customer.id)\r\n      .then((response) => {\r\n        console.log(\"ðŸš€ ~ response\", response);\r\n\r\n        let dataSet: any[] = [];\r\n\r\n        response.forEach((element: any) => {\r\n          dataSet.push({\r\n            id: element.id,\r\n            status: element.status.description,\r\n            application: element.application.name,\r\n            description: element.description,\r\n          });\r\n        });\r\n\r\n        this.setState({\r\n          data: dataSet,\r\n        });\r\n        this.setState((prevState) => ({\r\n          showData: !prevState.showData,\r\n        }));\r\n        console.log(\"ðŸš€ ~ this.state\", this.state);\r\n      });\r\n  }\r\n\r\n  Data = (isLoggedIn?: boolean) => {\r\n    if (this.state.showData) {\r\n      return (\r\n        <div className={\"Tablehost\"}>\r\n          <MaterialTable\r\n            title={this.props.Customer.name}\r\n            options={{\r\n                paging:false,\r\n                pageSize: 10,\r\n\r\n            }}\r\n            columns={[\r\n              { title: \"Call Id\", field: \"id\" },\r\n              { title: \"Status\", field: \"status\" },\r\n              { title: \"Application\", field: \"application\" },\r\n              { title: \"Description\", field: \"description\" },\r\n            ]}\r\n            data={this.state.data}\r\n            // {[\r\n            //   {\r\n            //     status: \"Mehmet\",\r\n            //     application: \"Baran\",\r\n            //     description: 1987,\r\n            //     birthCity: 63,\r\n            //   },\r\n            //   {\r\n            //     name: \"Zerya BetÃ¼l\",\r\n            //     surname: \"Baran\",\r\n            //     birthYear: 2017,\r\n            //     birthCity: 34,\r\n            //   },\r\n            // ]}\r\n            editable={{\r\n              onRowAdd: (newData) =>\r\n                new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                    // setData([...data, newData]);\r\n                    // resolve();\r\n                  }, 1000);\r\n                }),\r\n              onRowUpdate: (newData, oldData) =>\r\n                new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                    //const dataUpdate = [...data];\r\n                    //const index = oldData.tableData.id;\r\n                    //dataUpdate[index] = newData;\r\n                    //setData([...dataUpdate]);\r\n                    //resolve();\r\n                  }, 1000);\r\n                }),\r\n              onRowDelete: (oldData) =>\r\n                new Promise((resolve, reject) => {\r\n                  setTimeout(() => {\r\n                    //const dataDelete = [...data];\r\n                    //const index = oldData.tableData.id;\r\n                    //dataDelete.splice(index, 1);\r\n                    //setData([...dataDelete]);\r\n                    //resolve()\r\n                  }, 1000);\r\n                }),\r\n            }}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  public render(): React.ReactElement<ICustomerProps> {\r\n    return (\r\n      <div className=\"Customer\">\r\n        <div className=\"customerName\">{this.props.Customer.name}</div>\r\n        <div className=\"actionButtons\">\r\n          <a onClick={this.handleClick}>View Calls</a>\r\n        </div>\r\n        {this.Data()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Customer, Status, Call, Stats, Application } from \"./objects\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\n\nimport { services } from \"./services\";\nimport CustomerComponent from \"./customer\";\n\nexport interface appstate {\n  Customers: Customer[];\n\n  Calls: Call[];\n}\n\nexport default class App extends Component {\n  private services: services = new services();\n\n  state = {\n    Customers: [],\n  };\n\n  async componentDidMount() {\n    await this.services.getAllCustomers().then((data) => {\n      console.log(\"ðŸš€ ~ data\", data);\n\n      this.setState({ Customers: data });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.Customers ? (\n          this.state.Customers.map((item, index) => {\n            console.log(\"ðŸš€ ~ item\", item);\n\n            let name;\n            if (item) {\n              name = item[\"name\"];\n            } else {\n              name = null;\n            }\n\n            return (\n              <div>\n                {/* <div>{name}</div> */}\n\n                <CustomerComponent\n                  Customer={item}\n                ></CustomerComponent>\n              </div>\n            );\n          })\n        ) : (\n          <div></div>\n        )}\n\n        {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n"],"sourceRoot":""}