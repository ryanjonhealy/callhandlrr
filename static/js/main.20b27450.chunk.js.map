{"version":3,"sources":["services.ts","App.tsx","reportWebVitals.js","index.tsx"],"names":["services","fetch","then","res","json","data","console","log","catch","error","customerId","mode","App","state","Customers","a","this","getAllCustomers","setState","className","map","item","index","name","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAEaA,G,MAAb,sIACE,8FAOeC,MAET,4DACE,IAQHC,MAAK,SAACC,GAAD,OAEJA,EAAIC,UAILF,MAAK,SAACG,GAGL,OAFAC,QAAQC,IAAI,sBAAaF,GAElBA,KAERG,OAAM,SAACC,GACNH,QAAQC,IAAIE,MA9BlB,mFADF,sHAoCE,WAAyBC,GAAzB,iFACQT,MACJ,6DAA+DS,EAC/D,CAAEC,KAAM,YAEPT,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAEL,OADAC,QAAQC,IAAI,sBAAaF,GAClBA,KAERG,OAAM,SAACC,GACNH,QAAQC,IAAIE,MAXlB,4EApCF,+D,OCYqBG,E,4MACXZ,SAAqB,IAAIA,E,EAEjCa,MAAQ,CACNC,UAAW,I,8FAGb,iCAAAC,EAAA,sEACQC,KAAKhB,SAASiB,kBAAkBf,MAAK,SAACG,GAC1CC,QAAQC,IAAI,sBAAaF,GAEzB,EAAKa,SAAS,CAAEJ,UAAWT,OAJ/B,gD,0EAQA,WACE,OACE,qBAAKc,UAAU,MAAf,SAEGH,KAAKH,MAAMC,UACVE,KAAKH,MAAMC,UAAUM,KAAI,SAACC,EAAMC,GAI9B,IAAIC,EAOJ,OAVFjB,QAAQC,IAAI,sBAAac,GAKrBE,EADCF,EACMA,EAAI,KAEL,KAGD,8BAAME,OAGf,8B,GAlCuBC,aCFlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAO1BZ,M","file":"static/js/main.20b27450.chunk.js","sourcesContent":["import { Customer, Status, Call, Stats, Application } from \"./objects\";\r\n\r\nexport class services {\r\n  public async getAllCustomers(): Promise<any> {\r\n    let data;\r\n    let test;\r\n\r\n\r\n    //\r\n\r\n    return await fetch(\r\n       // \"http://localhost:8010/proxy/api/Customer\"\r\n        \"https://techtestcalllogapi.azurewebsites.net/api/Customer\"\r\n        , {\r\n        //mode:'cors',\r\n\r\n    //   headers: {\r\n    //     Accept: \"application/json\",\r\n    //     \"Content-Type\": \"application/json\",\r\n    //   },\r\n    })\r\n      .then((res) => \r\n        \r\n        res.json()\r\n        \r\n        \r\n      )\r\n      .then((data) => {\r\n        console.log(\"ðŸš€ ~ data\", data);\r\n\r\n        return data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    ;\r\n  }\r\n\r\n  public async getCustomer(customerId?: number): Promise<any> {\r\n    await fetch(\r\n      \"https://techtestcalllogapi.azurewebsites.net/api/Customer/\" + customerId,\r\n      { mode: \"no-cors\" }\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(\"ðŸš€ ~ data\", data);\r\n        return data;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    return;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { Customer, Status, Call, Stats, Application } from \"./objects\";\n\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\n\nimport { services } from \"./services\";\n\nexport interface appstate {\n  Customers: Customer[];\n\n  Calls: Call[];\n}\n\nexport default class App extends Component {\n  private services: services = new services();\n\n  state = {\n    Customers: [],\n  };\n\n  async componentDidMount() {\n    await this.services.getAllCustomers().then((data) => {\n      console.log(\"ðŸš€ ~ data\", data);\n\n      this.setState({ Customers: data });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        \n        {this.state.Customers ? (\n          this.state.Customers.map((item, index) => {\n          console.log('ðŸš€ ~ item', item);\n\n            \n            let name\n            if(item){\n              name = item[\"name\"];\n            }else{\n              name =null;\n            }\n\n            return <div>{name}</div>;\n          })\n        ) : (\n          <div></div>\n        )}\n\n\n        \n        {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n"],"sourceRoot":""}